package com.sinhvien.lorenzo;import androidx.annotation.NonNull;import androidx.appcompat.app.AlertDialog;import androidx.appcompat.app.AppCompatActivity;import androidx.fragment.app.Fragment;import androidx.viewpager.widget.ViewPager;import androidx.viewpager2.adapter.FragmentStateAdapter;import android.content.DialogInterface;import android.os.Bundle;import android.view.MenuItem;import com.google.android.material.appbar.AppBarLayout;import com.google.android.material.bottomnavigation.BottomNavigationView;import java.util.ArrayList;import java.util.List;import me.relex.circleindicator.CircleIndicator;public class MainActivity extends AppCompatActivity {    DBHelper db;    @Override    protected void onCreate(Bundle savedInstanceState) {    super.onCreate(savedInstanceState);        setContentView(R.layout.activity_main);        BottomNavigationView bottomNav = findViewById(R.id.bottom_nav);        db=new DBHelper(this);        getSupportFragmentManager().beginTransaction().replace(R.id.list_fragment_navigation,new HomeFragment()).commit();        bottomNav.setOnNavigationItemSelectedListener(navigationItemSelectedListener);    }    @Override    public void onBackPressed() {        AlertDialog.Builder builder = new AlertDialog.Builder(this);        builder.setMessage("Bạn có muốn thoát không?")                .setCancelable(false)                .setPositiveButton("Yes", new DialogInterface.OnClickListener() {                    @Override                    public void onClick(DialogInterface dialog, int which) {                        MainActivity.super.onBackPressed();                    }                })                .setNegativeButton("No", new DialogInterface.OnClickListener() {                    @Override                    public void onClick(DialogInterface dialogInterface, int which) {                        dialogInterface.cancel();                    }                });        AlertDialog alertDialog = builder.create();        alertDialog.show();    }    private BottomNavigationView.OnNavigationItemSelectedListener navigationItemSelectedListener=new BottomNavigationView.OnNavigationItemSelectedListener() {        @Override        public boolean onNavigationItemSelected(@NonNull MenuItem item) {            Fragment selectedFragment=null;            switch (item.getItemId()){                case R.id.nav_accout:                    if(db.getCountAccount()==0)                    {                        selectedFragment=new NoAccountFragment();                        break;                    }                     else                    {                        selectedFragment=new AccountFragment();                        break;                    }                case R.id.nav_cart:                    selectedFragment=new CartFragment();                    break;                case R.id.nav_home:                    selectedFragment=new HomeFragment();                    break;                default:                    selectedFragment=new HomeFragment();                    break;            }            getSupportFragmentManager().beginTransaction().replace(R.id.list_fragment_navigation,selectedFragment).commit();            return true;        }    };}